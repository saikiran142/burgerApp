{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Burger/BuildControls/BuildControls.css","components/Layout/Layout.css","components/Burger/Burger.css","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","Layout","className","classes","Content","BurgerBuilder","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Component","Burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","ele","i","key","reduce","arr","el","concat","console","log","length","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","disabledInfo","OrderButton","purchable","INGREDIENT_PRICES","state","totalPrice","purchasable","addIngredientHandler","newCount","updatedIngredient","updatedTotalPrice","updatedPurchasable","setState","removeIngredientHandler","oldCount","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf66223b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom___1UbSh\",\"BreadTop\":\"BurgerIngredient__BreadTop___d94JO\",\"Seeds1\":\"BurgerIngredient__Seeds1___1Odq_\",\"Seeds2\":\"BurgerIngredient__Seeds2___3PsG4\",\"Meat\":\"BurgerIngredient__Meat___1fXGJ\",\"Cheese\":\"BurgerIngredient__Cheese___3MB6x\",\"Salad\":\"BurgerIngredient__Salad___zQem8\",\"Bacon\":\"BurgerIngredient__Bacon___1El-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl___2zYRW\",\"Label\":\"BuildControl__Label___2mOXk\",\"Less\":\"BuildControl__Less___20ieq\",\"More\":\"BuildControl__More___29mgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls___bpFGs\",\"OrderButton\":\"BuildControls__OrderButton___L9P-q\",\"enable\":\"BuildControls__enable___3VXZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content___2jRP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger___Rr26x\"};","const Auxiliary = (props) => props.children;\r\n\r\nexport default Auxiliary;","import React from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport classes from './Layout.css';\r\nconst Layout = (props) => {\r\n    return (\r\n        <Auxiliary>\r\n            <p>Toolbar, Sidebar, Backdrop</p>\r\n            <main className={classes.Content}>{props.children}</main>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React , {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.css';\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n        \r\n}\r\n\r\nBurgerBuilder.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerBuilder;","import React from 'react';\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n                                    .map(ingKey => \r\n                                        [...Array(props.ingredients[ingKey])]\r\n                                        .map((ele,i) =>{\r\n                                            return <BurgerIngredient type={ingKey} key={ingKey + i} />\r\n                                        }))\r\n                                        .reduce((arr, el)=>{\r\n                                            return arr.concat(el);\r\n                                        }, []);\r\n    \r\n    console.log(transformedIngredients);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please Add Ingredients</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger;","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\nconst BuildControls = (props) => {\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p> Current Price : <strong>{props.price.toFixed(2)} </strong> </p>\r\n            {controls.map(ctrl => {\r\n                return <BuildControl \r\n                            key={ctrl.label} \r\n                            label={ctrl.label}\r\n                            added={() => props.ingredientAdded(ctrl.type)}\r\n                            removed={() => props.ingredientRemoved(ctrl.type)}\r\n                            disabled={props.disabledInfo[ctrl.type]}/>\r\n            })}\r\n            <button className={classes.OrderButton} disabled={!(props.purchable)}>ORDER NOW</button>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default BuildControls;","import React , { Component } from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    'salad' : 0.5,\r\n    'bacon' : 0.6,\r\n    'meat' : 1.5,\r\n    'cheese' : 0.8\r\n}\r\nclass BurgerBuilder extends Component {\r\n    \r\n    state = {\r\n        ingredients : {\r\n            'salad' : 0,\r\n            'bacon' : 0,\r\n            'meat' : 0,\r\n            'cheese' : 0\r\n        },\r\n        totalPrice : 4,\r\n        purchasable : false\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const newCount = oldCount + 1;\r\n        const updatedIngredient = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredient[type] = newCount;\r\n        const updatedTotalPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\r\n        console.log(updatedIngredient,updatedTotalPrice);\r\n        let updatedPurchasable = false;\r\n        if(updatedTotalPrice >4)\r\n        {\r\n            updatedPurchasable = true;\r\n        }\r\n        this.setState({\r\n            ingredients : updatedIngredient,\r\n            totalPrice : updatedTotalPrice,\r\n            purchasable: updatedPurchasable\r\n        })\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount>0)\r\n        {\r\n            const newCount = oldCount - 1;\r\n            const updatedIngredient = {\r\n                ...this.state.ingredients\r\n            }\r\n            updatedIngredient[type] = newCount;\r\n            const updatedTotalPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\r\n            console.log(updatedIngredient,updatedTotalPrice);\r\n            let updatedPurchasable = false;\r\n            if(updatedTotalPrice >4)\r\n            {\r\n                updatedPurchasable = true;\r\n            }\r\n            this.setState({\r\n                ingredients : updatedIngredient,\r\n                totalPrice : updatedTotalPrice,\r\n                purchasable: updatedPurchasable\r\n            })\r\n        }else {\r\n            return;\r\n        }\r\n    }\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = ( disabledInfo[key] <=0);\r\n        }\r\n        return (\r\n            <Auxiliary>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabledInfo={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    purchable={this.state.purchasable} />\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nclass App extends Component {\n\n  render(){\n    return (\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    )\n  }s\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}